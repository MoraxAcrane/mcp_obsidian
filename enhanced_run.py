#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ MCP —Å–µ—Ä–≤–µ—Ä–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é
"""

import os
import subprocess
import sys
from pathlib import Path


def run_enhanced_server():
    """–ó–∞–ø—É—Å–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ MCP —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é Enhanced MCP —Å–µ—Ä–≤–µ—Ä —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é...")
    print("‚ú® –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:")
    print("  ‚Ä¢ vault_overview - –∞–Ω–∞–ª–∏–∑ –∑–¥–æ—Ä–æ–≤—å—è vault")
    print("  ‚Ä¢ read_note_enhanced - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ")
    print("  ‚Ä¢ create_note_smart - —É–º–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Å –∞–≤—Ç–æ—Ç–µ–≥–∞–º–∏")
    print("  ‚Ä¢ append_to_note - —É–º–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    print("  ‚Ä¢ note_exists - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è")
    print("  ‚Ä¢ create_folder - —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ vault")
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ enhanced —Å–µ—Ä–≤–µ—Ä–∞
    cmd = [sys.executable, "-c", "from obsidian_mcp.enhanced_server import main; import asyncio; asyncio.run(main())"]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥ –µ—Å–ª–∏ –µ—Å—Ç—å
    config_file = Path("obsidian_mcp_config.yaml")
    if config_file.exists():
        cmd.extend(["--config", str(config_file)])
        print(f"üìÇ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {config_file}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ vault
        try:
            import yaml
            with open(config_file, 'r', encoding='utf-8') as f:
                config_data = yaml.safe_load(f)
                vault_path = config_data.get('vault', {}).get('path', '–Ω–µ —É–∫–∞–∑–∞–Ω')
                print(f"üóÇÔ∏è Vault: {vault_path}")
        except:
            pass
    else:
        print("üìÇ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (./vault)")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env = os.environ.copy()
    src_path = str(Path(__file__).parent / "src")
    current_path = env.get("PYTHONPATH", "")
    env["PYTHONPATH"] = src_path + (os.pathsep + current_path if current_path else "")
    
    print("=" * 60)
    print("üì° Enhanced MCP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    print("üîß –î–æ—Å—Ç—É–ø–Ω–æ 12+ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤–∫–ª—é—á–∞—è –Ω–æ–≤—ã–µ enhanced –≤–µ—Ä—Å–∏–∏")
    print("ü§ñ –ò–ò-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è")
    print("=" * 60)
    
    try:
        subprocess.run(cmd, env=env, check=True)
    except KeyboardInterrupt:
        print("\n‚úÖ Enhanced —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return 1
    
    return 0


if __name__ == "__main__":
    sys.exit(run_enhanced_server())
